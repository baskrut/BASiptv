package com.andrewbas.basiptv


import android.app.Dialog
import android.content.ActivityNotFoundException
import android.content.DialogInterface
import android.content.Intent
import android.net.Uri
import android.os.Bundle
import android.util.Log
import android.view.View
import android.widget.Button
import android.widget.TextView
import androidx.appcompat.app.AlertDialog
import androidx.appcompat.app.AppCompatActivity
import com.andrewbas.basiptv.utils.M3UParser
import com.andrewbas.basiptv.utils.Presenter
import okio.IOException
import okio.buffer
import okio.source


class AddPlayListActivity : AppCompatActivity(), View.OnClickListener {

    lateinit var btnGetFromStorage: Button
    lateinit var btnGetFromNet: Button
    lateinit var etLink: TextView

    //todo its debug Button
    lateinit var btnGoToMain: Button


    val INTENT_REQUEST_CODE: Int = 1905

    val presenter = Presenter()

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_add_play_list)

        btnGetFromNet = findViewById(R.id.btnGetFromNet)
        btnGetFromStorage = findViewById(R.id.btnGetFromStorage)
        etLink = findViewById(R.id.etLink)

        btnGetFromNet.setOnClickListener(this)
        btnGetFromStorage.setOnClickListener(this)


        //todo its debug Button
        btnGoToMain = findViewById(R.id.btnGoToMain)
        btnGoToMain.setOnClickListener(this)

    }


    override fun onClick(v: View?) {

        if(v?.id == R.id.btnGetFromStorage){
            getPlayListFromStorage()
        }

        if(v?.id == R.id.btnGetFromNet){

            val etText = etLink.text.toString()

            if (isUrl(etText)){
                getPlayListFromNet(etText)

            }else {
               showDialog(R.string.need_url.toString())
            }
        }

        //todo its debug Button
        if (v?.id == R.id.btnGoToMain){
            goToMainActivity()
        }


    }


    fun isUrl(s: String): Boolean {

        //todo проверка на принадлежность строки к url адресу
        return true
    }



    fun getPlayListFromNet(link: String){

    }

    fun getPlayListFromStorage(){

        intentStorageAcces()
    }

    fun intentStorageAcces(){
        try {
            val intent = Intent(Intent.ACTION_OPEN_DOCUMENT)
                intent.addCategory(Intent.CATEGORY_OPENABLE)
                intent.type = "*/*"
            startActivityForResult(intent, INTENT_REQUEST_CODE)

        }catch (e: ActivityNotFoundException){
            e.printStackTrace()
        }

    }

    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?){

        if (requestCode == INTENT_REQUEST_CODE && resultCode == RESULT_OK && data != null){

               val uri = data.data!!

                readLines(uri)

            }else{

               showDialog(R.string.smt_wrong_storage.toString())
            }

        super.onActivityResult(requestCode, resultCode, data)//autogenerated
    }

    @Throws(IOException::class)
    fun readLines(uri: Uri) {

        val playList = mutableListOf("")

        contentResolver.openInputStream(uri)!!.source().use { fileSource ->
            fileSource.buffer().use { bufferedFileSource ->
                while (true) {
                    val line = bufferedFileSource.readUtf8Line() ?: break
                    if(line.isNotBlank() && line.isNotEmpty()){
                        playList.add(line)
                    }
                }
            }
        }
        Log.d("myLog", "read lines done")
        presenter.tvChannels =  M3UParser(playList).getTvChannels()
        Log.d("myLog", "M3UParser(playList).getTvChannels() done")
        presenter.addAllChannelsToDB()
    }

    fun showDialog(message: String){

        val builder = AlertDialog.Builder(this)
        builder.setMessage(message)
        builder.setPositiveButton(R.string.dialog_positive_btn,
            DialogInterface.OnClickListener { dialog, id ->
                if (id == Dialog.BUTTON_POSITIVE) {
                    dialog.cancel()
                }
            })
    }

 fun  goToMainActivity(){
        intent = Intent(this, MainActivity::class.java)
        startActivity(intent)
    }
}
